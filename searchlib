-- Instances: 25 | Scripts: 0 | Modules: 1
local SEARCH = {};

-- SearchableThing
SEARCH["1"] = Instance.new("ScreenGui");
SEARCH["1"].Enabled = false
if game["Run Service"]:IsStudio() then
	SEARCH["1"]["Parent"] = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui");
else
	SEARCH["1"]["Parent"] = game.CoreGui;
end
SEARCH["1"]["Name"] = [[SearchableThing]];
SEARCH["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;

-- SearchableThing.ServerFrame
SEARCH["2"] = Instance.new("Frame", SEARCH["1"]);
SEARCH["2"]["BorderSizePixel"] = 0;
SEARCH["2"]["BackgroundColor3"] = Color3.fromRGB(48, 50, 55);
SEARCH["2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
SEARCH["2"]["Size"] = UDim2.new(0, 214, 0, 321);
SEARCH["2"]["ClipsDescendants"] = true;
SEARCH["2"]["Position"] = UDim2.new(0.5010818243026733, 0, 0.5374480485916138, 0);
SEARCH["2"]["Name"] = [[ServerFrame]];

-- SearchableThing.ServerFrame.ServerTitleFrame
SEARCH["3"] = Instance.new("Frame", SEARCH["2"]);
SEARCH["3"]["BorderSizePixel"] = 0;
SEARCH["3"]["BackgroundColor3"] = Color3.fromRGB(48, 50, 55);
SEARCH["3"]["BackgroundTransparency"] = 1;
SEARCH["3"]["Size"] = UDim2.new(0, 214, 0, 40);
SEARCH["3"]["Position"] = UDim2.new(-0.001005368772894144, 0, -0.000900411163456738, 0);
SEARCH["3"]["Name"] = [[ServerTitleFrame]];

-- SearchableThing.ServerFrame.ServerTitleFrame.ServerTitle
SEARCH["4"] = Instance.new("TextLabel", SEARCH["3"]);
SEARCH["4"]["BorderSizePixel"] = 0;
SEARCH["4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
SEARCH["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
SEARCH["4"]["TextSize"] = 15;
SEARCH["4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["4"]["Size"] = UDim2.new(0, 97, 0, 39);
SEARCH["4"]["Text"] = [[Utility]];
SEARCH["4"]["Name"] = [[ServerTitle]];
SEARCH["4"]["BackgroundTransparency"] = 1;
SEARCH["4"]["Position"] = UDim2.new(0, 13, 0, 0);

-- SearchableThing.ServerFrame.GlowFrame
SEARCH["5"] = Instance.new("Frame", SEARCH["2"]);
SEARCH["5"]["BorderSizePixel"] = 0;
SEARCH["5"]["BackgroundColor3"] = Color3.fromRGB(48, 50, 55);
SEARCH["5"]["BackgroundTransparency"] = 1;
SEARCH["5"]["Size"] = UDim2.new(0, 214, 0, 40);
SEARCH["5"]["Position"] = UDim2.new(-0.001005368772894144, 0, -0.000900411163456738, 0);
SEARCH["5"]["Name"] = [[GlowFrame]];

-- SearchableThing.ServerFrame.GlowFrame.Glow
SEARCH["6"] = Instance.new("ImageLabel", SEARCH["5"]);
SEARCH["6"]["ZIndex"] = 0;
SEARCH["6"]["BorderSizePixel"] = 0;
SEARCH["6"]["SliceCenter"] = Rect.new(20, 20, 280, 280);
SEARCH["6"]["ScaleType"] = Enum.ScaleType.Slice;
SEARCH["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["6"]["ImageColor3"] = Color3.fromRGB(16, 16, 16);
SEARCH["6"]["Image"] = [[rbxassetid://4996891970]];
SEARCH["6"]["Size"] = UDim2.new(1, 30, 1, 30);
SEARCH["6"]["Name"] = [[Glow]];
SEARCH["6"]["BackgroundTransparency"] = 1;
SEARCH["6"]["Position"] = UDim2.new(0, -15, 0, -15);

-- SearchableThing.ServerFrame.ServerCorner
SEARCH["7"] = Instance.new("UICorner", SEARCH["2"]);
SEARCH["7"]["Name"] = [[ServerCorner]];
SEARCH["7"]["CornerRadius"] = UDim.new(0, 9);

-- SearchableThing.ServerFrame.SearchBar
SEARCH["8"] = Instance.new("Frame", SEARCH["2"]);
SEARCH["8"]["BackgroundColor3"] = Color3.fromRGB(38, 41, 44);
SEARCH["8"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
SEARCH["8"]["Size"] = UDim2.new(0, 200, 0, 36);
SEARCH["8"]["Position"] = UDim2.new(0.5, 0, 0.20100000500679016, 0);
SEARCH["8"]["Name"] = [[SearchBar]];

-- SearchableThing.ServerFrame.SearchBar.TextboxFrameOutlineCorner
SEARCH["9"] = Instance.new("UICorner", SEARCH["8"]);
SEARCH["9"]["Name"] = [[TextboxFrameOutlineCorner]];
SEARCH["9"]["CornerRadius"] = UDim.new(0, 3);

-- SearchableThing.ServerFrame.SearchBar.TextboxFrame
SEARCH["a"] = Instance.new("Frame", SEARCH["8"]);
SEARCH["a"]["BackgroundColor3"] = Color3.fromRGB(49, 52, 58);
SEARCH["a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
SEARCH["a"]["Size"] = UDim2.new(0.9750000238418579, 0, 0.8888888955116272, 0);
SEARCH["a"]["Selectable"] = true;
SEARCH["a"]["ClipsDescendants"] = true;
SEARCH["a"]["Position"] = UDim2.new(0.4991430640220642, 0, 0.4918772280216217, 0);
SEARCH["a"]["Name"] = [[TextboxFrame]];

-- SearchableThing.ServerFrame.SearchBar.TextboxFrame.TextboxFrameCorner
SEARCH["b"] = Instance.new("UICorner", SEARCH["a"]);
SEARCH["b"]["Name"] = [[TextboxFrameCorner]];
SEARCH["b"]["CornerRadius"] = UDim.new(0, 3);

-- SearchableThing.ServerFrame.SearchBar.TextboxFrame.TextBox
SEARCH["c"] = Instance.new("TextBox", SEARCH["a"]);
SEARCH["c"]["CursorPosition"] = -1;
SEARCH["c"]["PlaceholderColor3"] = Color3.fromRGB(92, 96, 102);
SEARCH["c"]["TextSize"] = 14;
SEARCH["c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
SEARCH["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["c"]["TextColor3"] = Color3.fromRGB(194, 196, 198);
SEARCH["c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
SEARCH["c"]["BackgroundTransparency"] = 1;
SEARCH["c"]["PlaceholderText"] = [[Search here!]];
SEARCH["c"]["Size"] = UDim2.new(0, 191, 0, 32);
SEARCH["c"]["Text"] = [[]];
SEARCH["c"]["Position"] = UDim2.new(0.017857322469353676, 0, 0, 0);

-- SearchableThing.ServerFrame.SearchBar.TextboxFrame.TextBox.UIPadding
SEARCH["d"] = Instance.new("UIPadding", SEARCH["c"]);
SEARCH["d"]["PaddingLeft"] = UDim.new(0, 5);

-- SearchableThing.ServerFrame.Tab
SEARCH["e"] = Instance.new("Folder", SEARCH["2"]);
SEARCH["e"]["Name"] = [[Tab]];

-- SearchableThing.ServerFrame.Tab.Main
SEARCH["f"] = Instance.new("Frame", SEARCH["e"]);
SEARCH["f"]["BorderSizePixel"] = 0;
SEARCH["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
SEARCH["f"]["BackgroundTransparency"] = 1;
SEARCH["f"]["Size"] = UDim2.new(0, 214, 0, 233);
SEARCH["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
SEARCH["f"]["Position"] = UDim2.new(0.5, 0, 0.6355140209197998, 0);
SEARCH["f"]["Name"] = [[Main]];

-- SearchableThing.ServerFrame.Tab.Main.ScrollingFrame
SEARCH["10"] = Instance.new("ScrollingFrame", SEARCH["f"]);
SEARCH["10"]["Active"] = true;
SEARCH["10"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
SEARCH["10"]["BorderSizePixel"] = 0;
SEARCH["10"]["CanvasSize"] = UDim2.new(0, 0, 0, 1);
SEARCH["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["10"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
SEARCH["10"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
SEARCH["10"]["BackgroundTransparency"] = 1;
SEARCH["10"]["Size"] = UDim2.new(0, 210, 0, 233);
SEARCH["10"]["ScrollBarImageColor3"] = Color3.fromRGB(16, 17, 19);
SEARCH["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
SEARCH["10"]["ScrollBarThickness"] = 3;
SEARCH["10"]["Position"] = UDim2.new(0.5, 0, 0.5021459460258484, 0);

-- SearchableThing.ServerFrame.Tab.Main.ScrollingFrame.UIListLayout
SEARCH["11"] = Instance.new("UIListLayout", SEARCH["10"]);
SEARCH["11"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
SEARCH["11"]["Padding"] = UDim.new(0, 5);
SEARCH["11"]["SortOrder"] = Enum.SortOrder.Name;

-- SearchableThing.ServerFrame.Tab.SearchingTab
SEARCH["12"] = Instance.new("Frame", SEARCH["e"]);
SEARCH["12"]["BorderSizePixel"] = 0;
SEARCH["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["12"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
SEARCH["12"]["BackgroundTransparency"] = 1;
SEARCH["12"]["Size"] = UDim2.new(0, 214, 0, 233);
SEARCH["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
SEARCH["12"]["Position"] = UDim2.new(0.5, 0, 0.6355140209197998, 0);
SEARCH["12"]["Name"] = [[SearchingTab]];

-- SearchableThing.ServerFrame.Tab.SearchingTab.ScrollingFrame
SEARCH["13"] = Instance.new("ScrollingFrame", SEARCH["12"]);
SEARCH["13"]["Active"] = true;
SEARCH["13"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
SEARCH["13"]["BorderSizePixel"] = 0;
SEARCH["13"]["CanvasSize"] = UDim2.new(0, 0, 0, 1);
SEARCH["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["13"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
SEARCH["13"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
SEARCH["13"]["BackgroundTransparency"] = 1;
SEARCH["13"]["Size"] = UDim2.new(0, 210, 0, 233);
SEARCH["13"]["ScrollBarImageColor3"] = Color3.fromRGB(16, 17, 19);
SEARCH["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
SEARCH["13"]["ScrollBarThickness"] = 3;
SEARCH["13"]["Position"] = UDim2.new(0.5, 0, 0.5021459460258484, 0);

-- SearchableThing.ServerFrame.Tab.SearchingTab.ScrollingFrame.UIListLayout
SEARCH["14"] = Instance.new("UIListLayout", SEARCH["13"]);
SEARCH["14"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
SEARCH["14"]["Padding"] = UDim.new(0, 5);
SEARCH["14"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- SearchableThing.Button
SEARCH["15"] = Instance.new("TextButton", SEARCH["1"]);
SEARCH["15"]["BorderSizePixel"] = 0;
SEARCH["15"]["AutoButtonColor"] = false;
SEARCH["15"]["BackgroundColor3"] = Color3.fromRGB(48, 50, 55);
SEARCH["15"]["TextSize"] = 14;
SEARCH["15"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
SEARCH["15"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
SEARCH["15"]["Visible"] = false;
SEARCH["15"]["Size"] = UDim2.new(0, 197, 0, 30);
SEARCH["15"]["Name"] = [[Button]];
SEARCH["15"]["Text"] = [[]];
SEARCH["15"]["Position"] = UDim2.new(0.03333333507180214, 0, 0, 0);

-- SearchableThing.Button.ChannelBtnCorner
SEARCH["16"] = Instance.new("UICorner", SEARCH["15"]);
SEARCH["16"]["Name"] = [[ChannelBtnCorner]];
SEARCH["16"]["CornerRadius"] = UDim.new(0, 6);

-- SearchableThing.Button.ChannelBtnHashtag
SEARCH["17"] = Instance.new("TextLabel", SEARCH["15"]);
SEARCH["17"]["BorderSizePixel"] = 0;
SEARCH["17"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
SEARCH["17"]["TextSize"] = 21;
SEARCH["17"]["TextColor3"] = Color3.fromRGB(115, 119, 126);
SEARCH["17"]["Size"] = UDim2.new(0, 24, 0, 30);
SEARCH["17"]["Text"] = [[#]];
SEARCH["17"]["Name"] = [[ChannelBtnHashtag]];
SEARCH["17"]["BackgroundTransparency"] = 1;
SEARCH["17"]["Position"] = UDim2.new(0.027972031384706497, 0, 0, 0);

-- SearchableThing.Button.ChannelBtnTitle
SEARCH["18"] = Instance.new("TextLabel", SEARCH["15"]);
SEARCH["18"]["BorderSizePixel"] = 0;
SEARCH["18"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["18"]["TextXAlignment"] = Enum.TextXAlignment.Left;
SEARCH["18"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
SEARCH["18"]["TextSize"] = 14;
SEARCH["18"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["18"]["Size"] = UDim2.new(0, 95, 0, 39);
SEARCH["18"]["Text"] = [[Button]];
SEARCH["18"]["Name"] = [[ChannelBtnTitle]];
SEARCH["18"]["BackgroundTransparency"] = 1;
SEARCH["18"]["Position"] = UDim2.new(0.17374709248542786, 0, -0.1666666716337204, 0);

--# TF is this shit
-- SearchableThing.ServerFrame.ServerTitleFrame.Close
SEARCH["CLOSE"] = Instance.new("TextButton", SEARCH["3"]);
SEARCH["CLOSE"]["BorderSizePixel"] = 0;
SEARCH["CLOSE"]["TextSize"] = 19;
SEARCH["CLOSE"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
SEARCH["CLOSE"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
SEARCH["CLOSE"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
SEARCH["CLOSE"]["Size"] = UDim2.new(0, 39, 0, 39);
SEARCH["CLOSE"]["BackgroundTransparency"] = 1;
SEARCH["CLOSE"]["Name"] = [[Close]];
SEARCH["CLOSE"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
SEARCH["CLOSE"]["Text"] = [[X]];
SEARCH["CLOSE"]["Position"] = UDim2.new(0.81776, 0, 0, 0);

-- SearchableThing.ModuleScript
SEARCH["19"] = Instance.new("ModuleScript", SEARCH["1"]);


-- Require SEARCH wrapper
local SEARCH_REQUIRE = require;
local SEARCH_MODULES = {};
local function require(Module:ModuleScript)
	local ModuleState = SEARCH_MODULES[Module];
	if ModuleState then
		if not ModuleState.Required then
			ModuleState.Required = true;
			ModuleState.Value = ModuleState.Closure();
		end
		return ModuleState.Value;
	end;
	return SEARCH_REQUIRE(Module);
end

SEARCH_MODULES[SEARCH["19"]] = {
	Closure = function()
		local script = SEARCH["19"];
		local module = {}
		local ButtonFunc = {}
		local Buttons = {}

		local function MakeDraggable(topbarobject, object)
			local Dragging = nil
			local DragInput = nil
			local DragStart = nil
			local StartPosition = nil

			local function Update(input)
				local Delta = input.Position - DragStart
				local pos =
					UDim2.new(
						StartPosition.X.Scale,
						StartPosition.X.Offset + Delta.X,
						StartPosition.Y.Scale,
						StartPosition.Y.Offset + Delta.Y
					)
				object.Position = pos
			end

			topbarobject.InputBegan:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
						Dragging = true
						DragStart = input.Position
						StartPosition = object.Position

						input.Changed:Connect(
							function()
								if input.UserInputState == Enum.UserInputState.End then
									Dragging = false
								end
							end
						)
					end
				end
			)

			topbarobject.InputChanged:Connect(
				function(input)
					if
						input.UserInputType == Enum.UserInputType.MouseMovement or
						input.UserInputType == Enum.UserInputType.Touch
					then
						DragInput = input
					end
				end
			)

			game:GetService("UserInputService").InputChanged:Connect(
			function(input)
				if input == DragInput and Dragging then
					Update(input)
				end
			end
			)
		end

		MakeDraggable(script.Parent.ServerFrame.ServerTitleFrame, script.Parent.ServerFrame)
		
		script.Parent.ServerFrame.ServerTitleFrame.Close.MouseButton1Click:Connect(function()
			module:Toggle()
		end)
		
		script.Parent.ServerFrame.SearchBar.TextboxFrame.TextBox.Changed:Connect(function()

			for i,v in pairs(script.Parent.ServerFrame.Tab.SearchingTab.ScrollingFrame:GetChildren()) do
				if v:IsA("TextButton") then
					v:Destroy()
				end
			end

			if script.Parent.ServerFrame.SearchBar.TextboxFrame.TextBox.Text ~= "" then
				script.Parent.ServerFrame.Tab.Main.Visible = false
				script.Parent.ServerFrame.Tab.SearchingTab.Visible = true

				for i,v in pairs(script.Parent.ServerFrame.Tab.Main.ScrollingFrame:GetChildren()) do
					if v:IsA("TextButton") then
						if string.find(string.lower(v.Name), string.lower(script.Parent.ServerFrame.SearchBar.TextboxFrame.TextBox.Text)) then
							local newbtn = v:Clone()
							newbtn.Parent = script.Parent.ServerFrame.Tab.SearchingTab.ScrollingFrame
							newbtn.Visible = true

							newbtn.MouseButton1Click:Connect(function()
								ButtonFunc[newbtn.Name]()
							end)
							newbtn.MouseButton1Down:Connect(function()
								newbtn.BackgroundColor3 = Color3.fromRGB(57, 60, 67)
							end)
							newbtn.MouseButton1Up:Connect(function()
								newbtn.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
							end)
							newbtn.MouseEnter:Connect(function()
								newbtn.BackgroundColor3 = Color3.fromRGB(52, 55, 60)
							end)
							newbtn.MouseLeave:Connect(function()
								newbtn.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
							end)
						end
					end
				end
			else
				script.Parent.ServerFrame.Tab.Main.Visible = true
				script.Parent.ServerFrame.Tab.SearchingTab.Visible = false
			end
		end)

		function module:Toggle()
			script.Parent.Enabled = not script.Parent.Enabled
		end



		function module:Button(name,func)
			local newbtn = script.Parent.Button:Clone()
			newbtn.Parent = script.Parent.ServerFrame.Tab.Main.ScrollingFrame
			newbtn.Name = name
			newbtn.ChannelBtnTitle.Text = name
			newbtn.Visible = true

			ButtonFunc[name] = func
			table.insert(Buttons, newbtn)
			
			newbtn.MouseButton1Click:Connect(func)
			newbtn.MouseButton1Down:Connect(function()
				newbtn.BackgroundColor3 = Color3.fromRGB(57, 60, 67)
			end)
			newbtn.MouseButton1Up:Connect(function()
				newbtn.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
			end)
			newbtn.MouseEnter:Connect(function()
				newbtn.BackgroundColor3 = Color3.fromRGB(52, 55, 60)
			end)
			newbtn.MouseLeave:Connect(function()
				newbtn.BackgroundColor3 = Color3.fromRGB(47, 49, 54)
			end)
		end
		
		return module
	end;
};

return require(SEARCH["19"])
